const t="insert",e="update",o="delete",r=Symbol("observable-meta-key"),n={path:1,pathsOf:1,pathsFrom:1},s=function(t,e){if("function"!=typeof t)throw new Error("observer parameter MUST be a function");const o=this[r].observers;if(o.some(e=>e[0]===t))console.info("observer may be bound to an observable only once");else{let r;r=e?function(t){const e={};void 0!==t.path&&("string"!=typeof t.path?console.error('"path" option, if/when provided, MUST be a non-empty string'):e.path=t.path),void 0!==t.pathsOf&&(t.path?console.error('"pathsOf" option MAY NOT be specified together with "path" option'):"string"!=typeof t.pathsOf?console.error('"pathsOf" option, if/when provided, MUST be a non-empty string'):e.pathsOf=t.pathsOf.split(".").filter(t=>t)),void 0!==t.pathsFrom&&(t.path||t.pathsOf?console.error('"pathsFrom" option MAY NOT be specified together with "path"/"pathsOf"  option/s'):"string"!=typeof t.pathsFrom?console.error('"pathsFrom" option, if/when provided, MUST be a non-empty string'):e.pathsFrom=t.pathsFrom);const o=Object.keys(t).filter(t=>!n.hasOwnProperty(t));return o.length&&console.error(`'${o.join(", ")}' is/are not a valid option/s`),e}(e):{},o.push([t,r])}},a=function(){const t=this[r].observers;let e=t.length;if(e){let o=arguments.length;if(o)for(;o--;){let r=e;for(;r--;)t[r][0]===arguments[o]&&(t.splice(r,1),e--)}else t.splice(0)}},l=function(t,e){const o=Object.keys(t),n=Object.defineProperties({},{[r]:{value:e},observe:{value:s},unobserve:{value:a}});let l,i=o.length;for(;i--;)n[l=o[i]]=c(t[l],l,e);return n},i=function(t,e){let o=t.length;const n=Object.defineProperties(new Array(o),{[r]:{value:e},observe:{value:s},unobserve:{value:a}});for(;o--;)n[o]=c(t[o],o,e);return n},p=function(t,e){return Object.defineProperties(t,{[r]:{value:e},observe:{value:s},unobserve:{value:a}}),t},h=function(t,e){let o,r,n,s,a,l,i,p,h,c;const f=e.length;for(;;){for(p=(o=t.observers).length;p--;)try{n=(r=o[p])[0],s=r[1],a=e,s.path?(l=s.path,a=e.filter(t=>t.path.join(".")===l)):s.pathsOf?a=e.filter(t=>t.path.length===s.pathsOf.length+1):s.pathsFrom&&(i=s.pathsFrom,a=e.filter(t=>t.path.join(".").startsWith(i))),a.length&&n(a)}catch(t){console.error(`failed to deliver changes to listener ${n}`,t)}let u;if(!t.parent)break;u=new Array(f);for(let o=0;o<f;o++)c=e[o],h=[t.ownKey],Array.prototype.push.apply(h,c.path),u[o]={type:c.type,path:h,value:c.value,oldValue:c.oldValue,object:c.object};e=u,t=t.parent}},c=function(t,e,o){return t&&"object"==typeof t?Array.isArray(t)?new j({target:t,ownKey:e,parent:o}).proxy:ArrayBuffer.isView(t)?new O({target:t,ownKey:e,parent:o}).proxy:t instanceof Date||t instanceof Blob||t instanceof Error?t:new w({target:t,ownKey:e,parent:o}).proxy:t},f=function(){const t=this[r],e=t.target;let o,n,s;for(e.reverse(),o=0,n=e.length;o<n;o++)if((s=e[o])&&"object"==typeof s){const t=s[r];t&&(t.ownKey=o)}return h(t,[{type:"reverse",path:[],object:this}]),this},u=function(t){const e=this[r],o=e.target;let n,s,a;for(o.sort(t),n=0,s=o.length;n<s;n++)if((a=o[n])&&"object"==typeof a){const t=a[r];t&&(t.ownKey=n)}return h(e,[{type:"shuffle",path:[],object:this}]),this},y=function(o,n,s){const a=this[r],l=a.target,i=[],p=l.length,f=l.slice(0);let u;n=void 0===n?0:n<0?p+n:n,s=void 0===s?p:s<0?p+s:s,l.fill(o,n,s);for(let o,p,h=n;h<s;h++)o=l[h],l[h]=c(o,h,a),f.hasOwnProperty(h)?((p=f[h])&&"object"==typeof p&&(u=p[r])&&(p=u.detach()),i.push({type:e,path:[h],value:l[h],oldValue:p,object:this})):i.push({type:t,path:[h],value:l[h],object:this});return h(a,i),this},b=function(t,o,n){const s=this[r],a=s.target,l=a.length,i=a.slice(0);t=t<0?l+t:t,o=void 0===o?0:o<0?l+o:o,n=void 0===n?l:n<0?l+n:n,a.copyWithin(t,o,n);const p=[];for(let o,s,l,h=t;h<n;h++)(o=a[h])&&"object"==typeof o&&(l=o[r])&&(l.ownKey=h),(s=i[h])&&"object"==typeof s&&(l=s[r])&&(s=l.detach()),p.push({type:e,path:[h],value:o,oldValue:s,object:this});return h(s,p),this},v={pop:function(){const t=this[r],e=t.target,n=e.length-1;let s=e.pop();if(s&&"object"==typeof s){const t=s[r];t&&(s=t.detach())}return h(t,[{type:o,path:[n],oldValue:s,object:this}]),s},push:function(){const e=this[r],o=e.target,n=arguments.length,s=new Array(n),a=o.length;for(let t=0;t<n;t++)s[t]=c(arguments[t],a+t,e);const l=Reflect.apply(o.push,o,s),i=[];for(let e=a,r=o.length;e<r;e++)i[e-a]={type:t,path:[e],value:o[e],object:this};return h(e,i),l},shift:function(){const t=this[r],e=t.target;let n,s,a,l,i;for((n=e.shift())&&"object"==typeof n&&(i=n[r])&&(n=i.detach()),s=0,a=e.length;s<a;s++)(l=e[s])&&"object"==typeof l&&(i=l[r])&&(i.ownKey=s);return h(t,[{type:o,path:[0],oldValue:n,object:this}]),n},unshift:function(){const e=this[r],o=e.target,n=arguments.length,s=new Array(n);for(let t=0;t<n;t++)s[t]=c(arguments[t],t,e);const a=Reflect.apply(o.unshift,o,s);for(let t,e=0,n=o.length;e<n;e++)if((t=o[e])&&"object"==typeof t){const o=t[r];o&&(o.ownKey=e)}const l=s.length,i=new Array(l);for(let e=0;e<l;e++)i[e]={type:t,path:[e],value:o[e],object:this};return h(e,i),a},reverse:f,sort:u,fill:y,copyWithin:b,splice:function(){const n=this[r],s=n.target,a=arguments.length,l=new Array(a),i=s.length;for(let t=0;t<a;t++)l[t]=c(arguments[t],t,n);const p=0===a?0:l[0]<0?i+l[0]:l[0],f=a<2?i-p:l[1],u=Math.max(a-2,0),y=Reflect.apply(s.splice,s,l),b=s.length;let v,g,d,w;for(let t,e=0;e<b;e++)(t=s[e])&&"object"==typeof t&&(v=t[r])&&(v.ownKey=e);for(g=0,d=y.length;g<d;g++)(w=y[g])&&"object"==typeof w&&(v=w[r])&&(y[g]=v.detach());const j=[];let O;for(O=0;O<f;O++)O<u?j.push({type:e,path:[p+O],value:s[p+O],oldValue:y[O],object:this}):j.push({type:o,path:[p+O],oldValue:y[O],object:this});for(;O<u;O++)j.push({type:t,path:[p+O],value:s[p+O],object:this});return h(n,j),y}},g={reverse:f,sort:u,fill:y,copyWithin:b,set:function(t,o){const n=this[r],s=n.target,a=t.length,l=s.slice(0);o=o||0,s.set(t,o);const i=new Array(a);for(let t=o;t<a+o;t++)i[t-o]={type:e,path:[t],value:s[t],oldValue:l[t],object:this};h(n,i)}};class d{constructor(t,e){const o=t.target,r=t.parent,n=t.ownKey;r&&void 0!==n?(this.parent=r,this.ownKey=n):(this.parent=null,this.ownKey=null);const s=e(o,this);this.observers=[],this.revokable=Proxy.revocable(s,this),this.proxy=this.revokable.proxy,this.target=s}detach(){return this.parent=null,this.target}set(o,n,s){let a=o[n];if(s!==a){const l=c(s,n,this);if(o[n]=l,a&&"object"==typeof a){const t=a[r];t&&(a=t.detach())}const i=void 0===a?[{type:t,path:[n],value:l,object:this.proxy}]:[{type:e,path:[n],value:l,oldValue:a,object:this.proxy}];h(this,i)}return!0}deleteProperty(t,e){let n=t[e];if(delete t[e],n&&"object"==typeof n){const t=n[r];t&&(n=t.detach())}const s=[{type:o,path:[e],oldValue:n,object:this.proxy}];return h(this,s),!0}}class w extends d{constructor(t){super(t,l)}}class j extends d{constructor(t){super(t,i)}get(t,e){return v.hasOwnProperty(e)?v[e]:t[e]}}class O extends d{constructor(t){super(t,p)}get(t,e){return g.hasOwnProperty(e)?g[e]:t[e]}}class m{constructor(){throw new Error('Observable MAY NOT be created via constructor, see "Observable.from" API')}static from(t){if(t&&"object"==typeof t){if(t[r])return t;if(Array.isArray(t))return new j({target:t,ownKey:null,parent:null}).proxy;if(ArrayBuffer.isView(t))return new O({target:t,ownKey:null,parent:null}).proxy;if(t instanceof Date||t instanceof Blob||t instanceof Error)throw new Error(`${t} found to be one of non-observable types`);return new w({target:t,ownKey:null,parent:null}).proxy}throw new Error("observable MAY ONLY be created from a non-null object")}static isObservable(t){return!(!t||!t[r])}}Object.freeze(m),exports.Observable=m;